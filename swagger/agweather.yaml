openapi: 3.0.1
info:
  title: UW-Madison Agricultural Weather Service API
  version: "1.0.0"
  description: >
    <p>
      API for accessing agricultural weather data and forecasts. <a href='https://github.com/uwent/ag-weather' target=_blank>View respository on Github</a>.
    </p>
    <p>
      Powers the following related websites and services:
      <ul>
        <li>AgWeather website - <a href='https://agweather.cals.wisc.edu/' target=_blank>Visit site</a> - <a href='https://github.com/uwent/soils-ag-wx' target=_blank>Github repository</a></li>
        <li>Vegetable Disease and Insect Forecasting Network (VDIFN) - <a href='https://agweather.cals.wisc.edu/vdifn'>Visit site</a> - <a href='https://github.com/uwent/ag-vdifn'>Github repository</a></li>
        <li>Wisconsin Irrigation Scheduling Program (WISP) - <a href='https://wisp.cals.wisc.edu/' target=_blank>Visit site</a> - <a href='https://github.com/uwent/wisp' target=_blank>Github repository</a></li>
        <li>Alfalfa Weather and Cutting Tool (R Shiny app) - <a href='https://connect.doit.wisc.edu/alfalfa-tool/' target=_blank>View app</a> - <a href='https://github.com/bzbradford/alfalfa-tool' target=_blank>Github repository</a></li>
      </ul>
    </p>

servers:
  - url: https://agweather.cals.wisc.edu/api
  - url: https://dev.agweather.cals.wisc.edu/api
  - url: http://localhost:8080

components:
  parameters:
    # location params
    lat:
      name: lat
      in: query
      required: true
      schema:
        type: number
        minimum: 38.0
        maximum: 50.0
        example: 45.0
      description: Latitude of desired point, decimal degrees

    lng:
      name: lng
      in: query
      required: true
      schema:
        type: number
        minimum: -98.0
        maximum: -82.0
        example: -90.0
      description: Longitude of desired point, decimal degrees

    lat_range:
      name: lat_range
      in: query
      schema:
        type: string
        example: 45.0,50.0
      description: restrict latitude range in response

    lng_range:
      name: lng_range
      in: query
      schema:
        type: string
        example: -90.0,-85.0
      description: restrict longitude range in response

    # date params
    start_date:
      name: start_date
      in: query
      schema:
        type: string
        format: date
        example: "2024-01-01"
        default: Start of year
      description: Start of date range

    end_date:
      name: end_date
      in: query
      schema:
        type: string
        format: date
        example: "2024-10-10"
        default: Most recent data (usually yesterday)
      description: End of date range

    date:
      name: date
      in: query
      schema:
        type: string
        format: date
        example: "2024-01-01"
        default: Most recent data (usually yesterday)
      description: Single date for data, alias for end_date in some endpoints

    # unit params
    units:
      name: units
      in: query
      schema:
        type: string
      description: units, allowable values depends on context

    units__weather:
      name: units
      in: query
      schema:
        type: string
        enum: [C, F]
        example: F
        default: C
      description: temperature units

    units__precip:
      name: units
      in: query
      schema:
        type: string
        enum: [mm, in]
        default: mm
        example: in
      description: precipitation units

    units__et:
      name: units
      in: query
      schema:
        type: string
        enum: [in, mm]
        default: in
        example: mm
      description: potential evapotranspiration units

    units__insolation:
      name: units
      in: query
      schema:
        type: string
        enum: [MJ, KWh]
        default: MJ
        example: KWh
      description: solar insolation units

    units__degree_days:
      name: units
      in: query
      schema:
        type: string
        enum: [F, C]
        example: F
        default: F
      description: temperature units

    # model param
    model__degree_days:
      name: model
      in: query
      schema:
        type: string
        example: dd_50_86
      description: name of the degree day data column

    models__degree_days:
      name: models
      in: query
      schema:
        type: string
        example: dd_41,dd_50_86
      description: comma-separated names of columns from the degree days table

    pest:
      name: model
      in: query
      required: true
      schema:
        type: string
        example: potato_blight_dsv
      description: name of the pest model data column

    # degree days
    base:
      name: base
      in: query
      schema:
        type: number
        example: 50
      description: base temperature, Fahrenheit

    upper:
      name: upper
      in: query
      schema:
        type: number
        example: 86
      description: upper temperature limit, Fahrenheit

    method:
      name: method
      in: query
      schema:
        type: string
        example: sine
      description: degree day calculation method

    compute:
      name: compute
      in: query
      schema:
        type: boolean
      description: use 'true' to compute degree days for a custom model

    # map params
    scale:
      name: scale
      in: query
      schema:
        type: string
        example: 0,100
      description: min and max numeric scale range for map image, format e.g. 'min,max'

    extent:
      name: extent
      in: query
      schema:
        type: string
        example: wi
      description: constains map extent to Wisconsin only if included

    stat:
      name: stat
      in: query
      schema:
        type: string
        enum: ["avg", "min", "max", "sum"]
        example: sum
      description: select a summary statistic when generating a summary across multiple dates

  schemas:
    # info components
    statusInfo:
      type: string
      description: status message

    latInfo:
      type: number
      description: latitude of point

    lngInfo:
      type: number
      description: longitude of point

    latRangeInfo:
      type: string
      description: latitude range of grid

    lngRangeInfo:
      type: string
      description: longitude range of grid

    startDateInfo:
      type: string
      format: date
      description: start date of date range

    endDateInfo:
      type: string
      format: date
      description: end date of date range

    dateInfo:
      type: string
      format: date
      description: single date or alias for end date of date range

    daysRequestedInfo:
      type: integer
      description: number of days requested based on the date range

    daysReturnedInfo:
      type: integer
      description: actual number of dates found in database in the date range

    baseInfo:
      type: number
      description: growing degree day base temperature

    upperInfo:
      type: number
      description: growing degree day upper threshold temperature

    methodInfo:
      type: string
      description: growing degree day calculation method

    pestInfo:
      type: string
      description: name of the pest model requested and returned

    minValueInfo:
      type: number
      description: minimum value when returning single values instead of objects

    maxValueInfo:
      type: number
      description: maximum value when returning single values instead of objects

    totalInfo:
      type: number
      description: total value when returning single values instead of objects

    gridPointsInfo:
      type: integer
      description: number of grid points returned

    computeTimeInfo:
      type: number

    unitsInfoString:
      type: string
      description: unit requested and returned

    unitsInfoObject:
      type: object
      description: object provided when multiple units are referenced in the data
      properties:
        temp:
          type: string
        pressure:
          type: string
        rh:
          type: string

    # Info schemas
    commonIndexInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/statusInfo"
        lat:
          $ref: "#/components/schemas/latInfo"
        lng:
          $ref: "#/components/schemas/lngInfo"
        start_date:
          $ref: "#/components/schemas/startDateInfo"
        end_date:
          $ref: "#/components/schemas/endDateInfo"
        days_requested:
          $ref: "#/components/schemas/daysRequestedInfo"
        days_returned:
          $ref: "#/components/schemas/daysReturnedInfo"
        units:
          oneOf:
            - $ref: "#/components/schemas/unitsInfoString"
            - $ref: "#/components/schemas/unitsInfoObject"
        compute_time:
          $ref: "#/components/schemas/computeTimeInfo"

    commonGridInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/statusInfo"
        date:
          $ref: "#/components/schemas/dateInfo"
        days_requested:
          $ref: "#/components/schemas/daysRequestedInfo"
        lat_range:
          $ref: "#/components/schemas/latRangeInfo"
        lng_range:
          $ref: "#/components/schemas/lngRangeInfo"
        units:
          oneOf:
            - $ref: "#/components/schemas/unitsInfoString"
            - $ref: "#/components/schemas/unitsInfoObject"
        compute_time:
          $ref: "#/components/schemas/computeTimeInfo"

    degreeDaysInfo:
      type: object
      properties:
        base:
          $ref: "#/components/schemas/baseInfo"
        upper:
          $ref: "#/components/schemas/upperInfo"
        method:
          $ref: "#/components/schemas/methodInfo"

    numericSummaryInfo:
      type: object
      properties:
        min_value:
          $ref: "#/components/schemas/minValueInfo"
        max_value:
          $ref: "#/components/schemas/maxValueInfo"
        total:
          $ref: "#/components/schemas/totalInfo"

    # Data models
    WeatherData:
      type: object
      properties:
        date:
          type: string
          format: date
        min_temp:
          type: number
        max_temp:
          type: number
        avg_temp:
          type: number
        dew_point:
          type: number
        vapor_pressure:
          type: number
        min_rh:
          type: number
        max_rh:
          type: number
        avg_rh:
          type: number
        hours_rh_over_90:
          type: number
        avg_temp_rh_over_90:
          type: number
        frost:
          type: boolean
        freezing:
          type: boolean

    DegreeDayData:
      type: object
      properties:
        date:
          type: string
          format: date
        min_temp:
          type: number
        max_temp:
          type: number
        avg_temp:
          type: number
        value:
          type: number
        cumulative_value:
          type: number

    PestForecastsData:
      type: object
      properties:
        date:
          type: string
          format: date
        min_temp:
          type: number
        max_temp:
          type: number
        avg_temp:
          type: number
        avg_temp_hi_rh:
          type: number
        value:
          type: number
        cumulative_value:
          type: number

    PestForecastsVegpathData:
      type: object
      properties:
        Lat:
          type: number
        Long:
          type: number
        Date:
          type: string
          format: date
        DOY:
          type: integer
        MinTempF:
          type: number
        MaxTempF:
          type: number
        AvgTempF:
          type: number
        PrecipIn:
          type: number
        InsolationKWh:
          type: number
        EvapotranspirationIn:
          type: number
        DSV:
          type: integer
        CumDSV:
          type: integer
        PDay:
          type: number
        CumPDay:
          type: number

  # Responses
  responses:
    # /{endpoint}/map
    commonMap200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                type: object
                properties:
                  status:
                    $ref: "#/components/schemas/statusInfo"
                  args:
                    type: object
                    description: lists the arguments passed to the map maker
                  compute_time:
                    $ref: "#/components/schemas/computeTimeInfo"
              filename:
                type: string
                description: image filename
              url:
                type: string
                description: image url

    # /{endpoint}/info
    commonInfo200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data_cols:
                type: array
                items:
                  type: string
              lat_range:
                type: array
                items:
                  type: number
              lng_range:
                type: array
                items:
                  type: number
              date_range:
                type: array
                items:
                  type: string
                  format: date
              expected_days:
                type: integer
              actual_days:
                type: integer
              missing_days:
                type: array
                items:
                  type: string
                  format: date
              compute_time:
                type: number

    # /weather
    weatherIndex200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                $ref: "#/components/schemas/commonIndexInfo"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/WeatherData"
        text/csv: {}

    # /weather/grid
    weatherGrid200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonGridInfo"
                  - $ref: "#/components/schemas/unitsInfoObject"
              data:
                type: object
                description: A grid of weather data objects, keyed based on the [lat, lng] coordinate array of the grid point.
                properties:
                  "[LAT, LNG]":
                    $ref: "#/components/schemas/WeatherData"
        text/csv: {}

    # /weather/freeze_grid
    weatherFreezeGrid200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonGridInfo"
                  - $ref: "#/components/schemas/unitsInfoString"
              data:
                type: object
                description: A grid of values, keyed based on the [lat, lng] coordinate array of the grid point.
                properties:
                  "[LAT, LNG]":
                    type: integer

    # /precips, /evapotranspirations, /insolations
    simpleIndex200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonIndexInfo"
                  - $ref: "#/components/schemas/numericSummaryInfo"
              data:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    value:
                      type: number
                    cumulative_value:
                      type: number
        text/csv: {}

    # /precips/grid, /evapotranspirations/grid, /insolations/grid
    simpleGrid200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonGridInfo"
                  - $ref: "#/components/schemas/unitsInfoString"
              data:
                type: object
                description: A grid of values, keyed based on the [lat, lng] coordinate array of the grid point.
                properties:
                  "[LAT, LNG]":
                    type: number
        text/csv: {}

    # /degree-days
    degreeDaysIndex200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonIndexInfo"
                  - $ref: "#/components/schemas/degreeDaysInfo"
                  - $ref: "#/components/schemas/numericSummaryInfo"
              data:
                type: array
                items:
                  $ref: "#/components/schemas/DegreeDayData"

    degreeDaysDDTable200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonIndexInfo"
                  - $ref: "#/components/schemas/degreeDaysInfo"
                properties:
                  models:
                    type: array
                    description: list of the degree day model columns requested and returned
                    items:
                      type: string
              data:
                type: object
                description: hash map of daily min/max temps and degree day model values. Dates are used as key names.
                properties:
                  YYYY-MM-DD:
                    type: object
                    properties:
                      min_temp:
                        type: number
                      max_temp:
                        type: number
                      MODEL_NAME:
                        type: number

    # /pest_forecasts
    pestForecastsIndex200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonIndexInfo"
                  - $ref: "#/components/schemas/numericSummaryInfo"
                properties:
                  pest:
                    type: string
              data:
                type: array
                items:
                  $ref: "#/components/schemas/PestForecastsData"
        text/csv: {}

    pestForecastsGrid200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              info:
                allOf:
                  - $ref: "#/components/schemas/commonGridInfo"
                  - $ref: "#/components/schemas/numericSummaryInfo"
              data:
                type: object
                description: A grid of objects, keyed based on the [lat, lng] coordinate array of the grid point.
                properties:
                  "[LAT, LNG]":
                    type: object
                    properties:
                      total:
                        type: number
                      avg:
                        type: number
        text/csv: {}

    pestForecastsVegpath200:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PestForecastsVegpathData"

# Endpoints
paths:
  /weather:
    get:
      summary: Get weather data for a point across a date range
      tags:
        - Weather
        - Point data
      description: >
        lat - required, decimal latitude<br>
        lng - required, decimal longitude<br>
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - temperature units, either 'C' (default) or 'F'
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/units__weather"
      responses:
        "200":
          $ref: "#/components/responses/weatherIndex200"

  /weather/grid:
    get:
      summary: Get weather data for a range of points for a date
      tags:
        - Weather
        - Gridded data
      description: >
        date - default most recent data<br>
        lat_range - latitude range, default entire grid<br>
        lng_range - longitude range, default entire grid<br>
        units - temperature units, either 'C' (default) or 'F'
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/units__weather"
      responses:
        "200":
          $ref: "#/components/responses/weatherGrid200"

  /weather/freeze_grid:
    get:
      summary: Get grid of number of freezing days in date range
      tags:
        - Weather
        - Gridded data
      description: >
        date or end_date - default yesterday. Use date for single day<br>
        start_date - default 1 week ago<br>
        lat_range - min,max - default whole grid<br>
        lng_range - min,max - default whole grid
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
      responses:
        "200":
          $ref: "#/components/responses/weatherFreezeGrid200"

  /weather/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Weather
        - Map images
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, 'F' or 'C'<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, omit or 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg
      parameters:
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/units"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /weather/info:
    get:
      summary: Information about the weather endpoint and the state of the weather database
      tags:
        - Weather
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

  /precips:
    get:
      summary: Get precipitation data for a point across a date range
      tags:
        - Precipitation
        - Point data
      description: >
        lat - required, point latitude<br>
        lng - required, point longitude<br>
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional either "mm" (default) or "in"
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
      responses:
        "200":
          $ref: "#/components/responses/simpleIndex200"

  /precips/grid:
    get:
      summary: Get weather data for a range of points for a date
      tags:
        - Precipitation
        - Gridded data
      description: >
        date or end_date - defaults to most recent data<br>
        start_date - optional, provides a sum across dates if given<br>
        lat_range - optional, constrain latitudes i.e. '45,50'<br>
        lng_range - optional, constrain longitudes i.e. '-89,-85'<br>
        units - optional, either 'mm' (default) or 'in'
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/units__precip"
      responses:
        "200":
          $ref: "#/components/responses/simpleGrid200"

  /precips/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Precipitation
        - Map images
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, 'mm' (default) or 'in'<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg
      parameters:
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/units__precip"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /precips/info:
    get:
      summary: Information about the weather endpoint and the state of the weather database
      tags:
        - Precipitation
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

  /evapotranspirations:
    get:
      summary: Get precipitation data for a point across a date range
      tags:
        - Evapotranspiration
        - Point data
      description: >
        lat - required, point latitude<br>
        lng - required, point longitude<br>
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, either 'in' (default) or 'mm'
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
      responses:
        "200":
          $ref: "#/components/responses/simpleIndex200"

  /evapotranspirations/grid:
    get:
      summary: Get weather data for a range of points for a date
      tags:
        - Evapotranspiration
        - Gridded data
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default first of year if end_date provided<br>
        lat_range - optional, default full extent, format min,max<br>
        lng_range - optional, default full extent, format min,max<br>
        units - 'in' (default) or 'mm'<br>
        et_method - if 'adjusted', uses new coefficients
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/units__et"
      responses:
        "200":
          $ref: "#/components/responses/simpleGrid200"

  /evapotranspirations/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Evapotranspiration
        - Map images
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, 'in' (default) or 'mm'<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg
      parameters:
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/units"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /evapotranspirations/info:
    get:
      summary: Information about the weather endpoint and the state of the weather database
      tags:
        - Evapotranspiration
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

  /insolations:
    get:
      summary: Get precipitation data for a point across a date range
      tags:
        - Insolation
        - Point data
      description: >
        lat - required, point latitude<br>
        lng - required, point longitude<br>
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, either 'MJ' (default) or 'KWh'
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
      responses:
        "200":
          $ref: "#/components/responses/simpleIndex200"

  /insolations/grid:
    get:
      summary: Get weather data for a range of points for a date
      tags:
        - Insolation
        - Gridded data
      description: >
        date or end_date - default yesterday<br>
        start_date - optional, provides a sum or other statistic across dates if given<br>
        lat_range - optional, constrain latitudes i.e. '45,50'<br>
        lng_range - optional, constrain longitudes i.e. '-89,-85'<br>
        units - optional, either 'MJ' (default) or 'KWh'
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/units__insolation"
      responses:
        "200":
          $ref: "#/components/responses/simpleGrid200"

  /insolations/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Insolation
        - Map images
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        units - optional, 'MJ' (default) or 'KWh'<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg
      parameters:
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/units"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /insolations/info:
    get:
      summary: Information about the weather endpoint and the state of the weather database
      tags:
        - Insolation
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

  /degree_days:
    get:
      summary: List degree days for location
      tags:
        - Degree days
        - Point data
      description: >
        lat - required, decimal latitude<br>
        lng - required, decimal longitude<br>
        date or end_date - optional, default 1st of year. Use date for single day<br>
        start_date - optional, default 1st of year<br>
        Must specify one of:<br>
          model - name of degree day model column (default dd_50_86)<br>
        OR<br>
          base - required, default 50F<br>
          upper - optional, default none<br>
          method - default sine<br>
        units - default F
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/model__degree_days"
        - $ref: "#/components/parameters/base"
        - $ref: "#/components/parameters/upper"
        - $ref: "#/components/parameters/method"
        - $ref: "#/components/parameters/units__degree_days"
      responses:
        "200":
          $ref: "#/components/responses/degreeDaysIndex200"

  /degree_days/grid:
    get:
      summary: Get degree-day grid for date range. Will either return pre-calculated degree day accumulations or compute new ones
      tags:
        - Degree days
        - Gridded data
      description: >
        lat_range (min,max) - default full extent<br>
        lng_range (min,max) - default full extent<br>
        start_date - default first of year<br>
        end_date - default today<br>
        Must specify one of:<br>
          model - name of degree day model column (default dd_50_86)<br>
        OR<br>
          base - default 50F, required<br>
          upper - default 86F, optional<br>
        units - 'F' (default) or 'C' degree days<br>
        compute=true - force computation of a custom degree day model grid (takes at least 25s)
      parameters:
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/model__degree_days"
        - $ref: "#/components/parameters/base"
        - $ref: "#/components/parameters/upper"
        - $ref: "#/components/parameters/units__degree_days"
        - $ref: "#/components/parameters/compute"
      responses:
        "200":
          $ref: "#/components/responses/simpleGrid200"

  /degree_days/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Degree days
        - Map images
      description: >
        start_date - optional, default 1st of year<br>
        date or end_date - optional, default yesterday<br>
        units - optional, 'F' or 'C'<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, omit or 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg<br>
        model - optional, which degree day column to render, default 'dd_50_86'
      parameters:
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/units__degree_days"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
        - $ref: "#/components/parameters/model__degree_days"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /degree_days/dd_table:
    get:
      summary: Returns weather and degree day accumulations since Jan 1 of present year
      tags:
        - Degree days
        - Custom endpoints
      description: >
        lat: latitude, decimal degrees (required)<br>
        lng: longitude, decimal degrees (required)<br>
        start_date - default 1st of year<br>
        end_date - default yesterday<br>
        models: comma-separated degree day model names from degree_days table - default dd_50_86
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/models__degree_days"
      responses:
        "200":
          $ref: "#/components/responses/degreeDaysDDTable200"

  /degree_days/info:
    get:
      summary: Information about the degree_days endpoint and the state of the degree_days database
      tags:
        - Degree days
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

  /pest_forecasts:
    get:
      summary: Returns pest data for dates at lat/lng point
      tags:
        - Pest forecasts
        - Point data
      description: >
        lat - required, decimal latitude<br>
        lng - required, decimal longitude<br>
        start_date - optional, default 1st of year<br>
        date or end_date - optional, default yesterday<br>
        pest - required, column name of pest data
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/pest"
      responses:
        "200":
          $ref: "#/components/responses/pestForecastsIndex200"

  /pest_forecasts/grid:
    get:
      summary: Get degree-day grid for date range. Will either return pre-calculated degree day accumulations or compute new ones
      tags:
        - Pest forecasts
        - Gridded data
      description: >
        pest (required) - name of the pest data column<br>
        start_date - default 1st of year<br>
        end_date - default yesterday<br>
        lat_range - min,max - default whole grid<br>
        lng_range - min,max - default whole grid
      parameters:
        - $ref: "#/components/parameters/pest"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/lat_range"
        - $ref: "#/components/parameters/lng_range"
      responses:
        "200":
          $ref: "#/components/responses/pestForecastsGrid200"

  /pest_forecasts/vegpath:
    get:
      summary: Returns array of weather and pest info for vegetable pathology website charts
      tags:
        - Pest forecasts
        - Custom endpoints
      description: >
        lat - required, decimal latitude of location<br>
        lng - required, decimal longitude of location<br>
        start_date - optional, default May 1
      parameters:
        - $ref: "#/components/parameters/lat"
        - $ref: "#/components/parameters/lng"
        - $ref: "#/components/parameters/start_date"
      responses:
        "200":
          $ref: "#/components/responses/pestForecastsVegpath200"

  /pest_forecasts/map:
    get:
      summary: Generates a map image and returns the URL
      tags:
        - Pest forecasts
        - Map images
      description: >
        date or end_date - optional, default yesterday<br>
        start_date - optional, default 1st of year<br>
        scale - optional, 'min,max' for image scalebar<br>
        extent - optional, omit or 'wi' for Wisconsin only<br>
        stat - optional, summarization statistic, must be sum, min, max, avg<br>
        pest - optional, which pest forecasts column to render, default 'potato_blight_dsv'
      parameters:
        - $ref: "#/components/parameters/date"
        - $ref: "#/components/parameters/end_date"
        - $ref: "#/components/parameters/start_date"
        - $ref: "#/components/parameters/scale"
        - $ref: "#/components/parameters/extent"
        - $ref: "#/components/parameters/stat"
        - $ref: "#/components/parameters/pest"
      responses:
        "200":
          $ref: "#/components/responses/commonMap200"

  /pest_forecasts/info:
    get:
      summary: Information about the pest_forecasts endpoint and the state of the pest_forecasts database
      tags:
        - Pest forecasts
        - Endpoint information
      responses:
        "200":
          $ref: "#/components/responses/commonInfo200"

tags:
  - name: Weather
    description: Temperature, relative humidity, etc sourced from NOAA URMA grids
  - name: Precipitation
    description: Precipitation data sourced from NOAA URMA grids
  - name: Evapotranspiration
    description: Potential evapotranspiration calculated from weather and solar insolation
  - name: Insolation
    description: Solar insolation data sourced from UW-AOS
  - name: Degree days
    description: Growing degree-day models calculated from weather
  - name: Pest forecasts
    description: Vegetable disease models calculated from weather
  - name: Point data
    description: Endpoints providing data for individual points
  - name: Gridded data
    description: Endpoints returning entire data grids
  - name: Map images
    description: Endpoints for generating map images
  - name: Custom endpoints
    description: Endpoints for specific use cases
  - name: Endpoint information
    description: Endpoints that describe each database table
